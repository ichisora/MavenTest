<?xml version="1.0" encoding="UTF-8"?><testrun duration="971" footerText="Generated by IntelliJ IDEA on 22.05.2020, 18:34" name="TestWeather">
    <count name="total" value="7"/>
    <count name="failed" value="1"/>
    <count name="passed" value="6"/>
    <config nameIsGenerated="true" configId="JUnit" name="TestWeather">
        <module name="MavenTest"/>
        <extension name="coverage">
            <pattern>
                <option name="PATTERN" value="com.ichisora.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <option name="PACKAGE_NAME" value="com.ichisora"/>
        <option name="MAIN_CLASS_NAME" value="com.ichisora.TestWeather"/>
        <option name="TEST_OBJECT" value="class"/>
    </config>
    <suite duration="971" locationUrl="java:suite://com.ichisora.TestWeather" name="TestWeather" status="failed">
        <test duration="833" locationUrl="java:test://com.ichisora.TestWeather/checkTempAfterTwoHours" name="checkTempAfterTwoHours()" metainfo="" status="passed">
            <output type="stdout"/>
        </test>
        <test duration="20" locationUrl="java:test://com.ichisora.TestWeather/checkCurrentPressure" name="checkCurrentPressure()" metainfo="" status="passed">
            <output type="stdout"/>
        </test>
        <test duration="25" locationUrl="java:test://com.ichisora.TestWeather/checkTomorrowRain" name="checkTomorrowRain()" metainfo="" status="failed">
            <output type="stdout"/>
            <output type="stderr">org.opentest4j.AssertionFailedError: Должен идти дождь ==&amp;gt; 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">true
</output>
            <output type="stdout">Actual   :
</output>
            <diff actual="false" expected="true"/>
            <output type="stderr">false
&#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)&#13;
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)&#13;
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)&#13;
	at com.ichisora.TestWeather.checkTomorrowRain(TestWeather.java:45)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:87)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:53)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:66)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:87)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:66)&#13;
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)&#13;
</output>
        </test>
        <suite duration="93" locationUrl="java:test://com.ichisora.TestWeather/checkWindSpeed" name="checkWindSpeed(int)" metainfo="int" status="passed">
            <test duration="47" locationUrl="java:test://com.ichisora.TestWeather/checkWindSpeed" name="1=&gt; 1" metainfo="int" status="passed">
                <output type="stdout"/>
            </test>
            <test duration="16" locationUrl="java:test://com.ichisora.TestWeather/checkWindSpeed" name="2=&gt; 4" metainfo="int" status="passed">
                <output type="stdout"/>
            </test>
            <test duration="16" locationUrl="java:test://com.ichisora.TestWeather/checkWindSpeed" name="3=&gt; 5" metainfo="int" status="passed">
                <output type="stdout"/>
            </test>
            <test duration="14" locationUrl="java:test://com.ichisora.TestWeather/checkWindSpeed" name="4=&gt; 7" metainfo="int" status="passed">
                <output type="stdout"/>
            </test>
        </suite>
    </suite>
</testrun>
